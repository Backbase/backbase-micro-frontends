{
  "name": "/engagement/client-api/v1/general-notifications/{id}_GET",
  "request": {
    "url": "/engagement/client-api/v1/general-notifications/[^/]+(\\?.*)?$",
    "method": "GET"
  },
  "responses": {
    "success": {
      "status": 200,
      "data": {
        "id": "new-message-received",
        "name": "New Message Received",
        "preferencesEnabled": false,
        "push": {
          "engagementTemplates": [
            {
              "repositoryId": "engagement-template-notification",
              "contentPath": "/new-message-received/push/en_US/engagement-template.json",
              "locale": "en_US"
            }
          ]
        },
        "inAppNotification": {
          "engagementTemplates": [
            {
              "repositoryId": "engagement-template-notification",
              "contentPath": "/new-message-received/in-app-notification/en_US/engagement-template.json",
              "locale": "en_US"
            }
          ],
          "channelSettings": {
            "severityLevel": "INFO",
            "origin": "MessageCenter"
          }
        }
      },
      "default": true
    },
    "success_1": {
      "status": 200,
      "data": {
        "id": "new-transaction-occurred",
        "name": "New Transaction Occurred",
        "preferencesEnabled": true,
        "push": {
          "engagementTemplates": [
            {
              "repositoryId": "engagement-template-notification",
              "contentPath": "/new-transaction-occurred/push/en_US/engagement-template.json",
              "locale": "en_US"
            }
          ]
        },
        "inAppNotification": {
          "engagementTemplates": [
            {
              "repositoryId": "engagement-template-notification",
              "contentPath": "/new-transaction-occurred/in-app-notification/en_US/engagement-template.json",
              "locale": "en_US"
            }
          ],
          "channelSettings": {
            "severityLevel": "ALERT",
            "origin": "Transaction"
          }
        }
      }
    },
    "success_2": {
      "status": 200,
      "data": {
        "id": "account-statement-ready",
        "name": "Account Statement Is Ready",
        "preferencesEnabled": false,
        "push": {
          "engagementTemplates": [
            {
              "repositoryId": "engagement-template-notification",
              "contentPath": "/account-statement-ready/push/en_US/engagement-template.json",
              "locale": "en_US"
            }
          ]
        },
        "inAppNotification": {
          "engagementTemplates": [
            {
              "repositoryId": "engagement-template-notification",
              "contentPath": "/account-statement-ready/in-app-notification/en_US/engagement-template.json",
              "locale": "en_US"
            }
          ],
          "channelSettings": {
            "severityLevel": "SUCCESS",
            "origin": "AccountStatement"
          }
        }
      }
    },
    "notAuthorized": {
      "status": 401,
      "data": {
        "message": "Access to requested resource denied.",
        "key": "GENERAL_ERROR",
        "errors": [
          {
            "message": "Resource access denied due to invalid credentials.",
            "key": "common.api.token",
            "context": {
              "accessToken": "expired"
            }
          }
        ]
      }
    },
    "forbidden": {
      "status": 403,
      "data": {
        "message": "Access to requested resource denied.",
        "key": "GENERAL_ERROR",
        "errors": [
          {
            "message": "Resource access denied due to an insufficient user quota of {quota}.",
            "key": "common.api.quota",
            "context": {
              "quota": "someQuota"
            }
          }
        ]
      }
    },
    "notFound": {
      "status": 404,
      "data": {
        "message": "Resource not found.",
        "key": "GENERAL_ERROR",
        "errors": [
          {
            "message": "Unable to find the resource requested resource: {resource}.",
            "key": "common.api.resource",
            "context": {
              "resource": "aResource"
            }
          }
        ]
      }
    }
  }
}
